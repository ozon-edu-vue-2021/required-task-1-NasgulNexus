{"version":3,"sources":["scripts/index.js"],"names":["loaderTimeout","action","document","querySelector","templateImageCard","templateImagePopup","container","popup","popupContainer","popupClose","loader","MAX_PAGE_IAMGES","initialState","disabled","getPictures","page","limit","showLoader","fetch","then","response","json","result","renderPictures","getPictureInfo","id","renderPopupPicture","style","visibility","hideLoader","setTimeout","clearTimeout","cropImage","src","size","split","splice","domain","key","width","height","newWidth","Math","floor","newHeight","list","length","Error","clone","content","cloneNode","fragment","createDocumentFragment","forEach","element","link","href","url","dataset","image","download_url","alt","author","classList","add","appendChild","picture","img","textContent","innerHTML","togglePopup","toggle","actionHandler","evt","preventDefault","nextPage","currentTarget","console","warn","imageHandler","target","closest","addEventListener"],"mappings":"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","file":"scripts.b579cc90.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nconst action = document.querySelector('.action');\nconst templateImageCard = document.querySelector('#image');\nconst templateImagePopup = document.querySelector('#popup-image');\nconst container = document.querySelector('.images');\n\nconst popup = document.querySelector('.popup');\nconst popupContainer = document.querySelector('.popup .content');\nconst popupClose = document.querySelector('.popup .action');\nconst loader = document.querySelector('.loader');\n\nconst MAX_PAGE_IAMGES = 34;\nlet loaderTimeout;\n\n/**\n * Функция задаёт первоначальное состояние страницы.\n * Отправляется первый запрос за картинками, юез параметров т.к. с дефолтными настройками.\n */\nconst initialState = function () {\n    action.disabled = false;\n    getPictures();\n}\n\n/**\n * Функция запрашивает картинки для галереи\n * и вызывает ф-цию отрисовки полученных картинок\n * @param {number} page\n * @param {number} limit\n */\nconst getPictures = function (page = 1, limit = 10) {\n    showLoader();\n    fetch(`https://picsum.photos/v2/list?page=${page};limit=${limit}`)\n        .then(function (response) {return response.json()})\n        .then(function (result) {renderPictures(result)})\n}\n\n/**\n * Функция запрашивает информацию о конкретной картинке по её id\n * и вызывает ф-цию для отрисовки картинки в попапе\n * @param {number} id\n */\nconst getPictureInfo = function (id = 0) {\n    showLoader();\n    fetch(`https://picsum.photos/id/${id}/info`)\n        .then(function (response) {return response.json()})\n        .then(function (result) {renderPopupPicture(result)})\n}\n\n/**\n * Функция показывает индикатор загрузки.\n * Меняет ситили, ничего не возвращает.\n */\nconst showLoader = function () {\n    loader.style.visibility = 'visible';\n}\n\n/**\n * Функция скрывает индикатор загрузки.\n * Удаляет таймаут индикатора, ничего не возвращает.\n */\nconst hideLoader = function () {\n    loaderTimeout = setTimeout(function () {\n        loader.style.visibility = 'hidden';\n        loaderTimeout.clearTimeout();\n    }, 700);\n}\n\n/**\n * Функция пропорционально делит размер картинки,\n * чтобы в превью не загружать слишком большие картинки,\n * которые возвращает сервис\n * @param {string} src\n * @param {number} size\n */\nconst cropImage = function (src, size = 2) {\n    const [domain, key, id, width, height] = src.split('/').splice(2);\n    const newWidth = Math.floor(+width / size);\n    const newHeight = Math.floor(+height / size);\n\n    return `https://${domain}/${key}/${id}/${newWidth}/${newHeight}`;\n}\n\n/**\n * Функция копирует шаблон для каждой картинки,\n * заполняет его и встраивает в разметку\n * @param {array} list\n */\nconst renderPictures = function (list) {\n    if (!list.length) {\n        throw Error(`Pictures not defined. The list length: ${list.length}`);\n    }\n\n    const clone = templateImageCard.content.cloneNode(true);\n    const fragment = document.createDocumentFragment();\n\n    list.forEach(function (element) {\n        const link = clone.querySelector('a');\n\n        link.href = element.url;\n        link.dataset.id = element.id;\n\n        const image = clone.querySelector('img');\n        image.src = cropImage(element.download_url, 5);\n        image.alt = element.author;\n        image.classList.add('preview');\n        fragment.appendChild(clone)\n    });\n\n    container.appendChild(fragment);\n    hideLoader();\n}\n\n/**\n * Функция копирует шаблон для картинки в попапе,\n * заполняет его и встраивает в попап\n * @param {object} picture\n */\nconst renderPopupPicture = function (picture) {\n    const clone = templateImagePopup.content.cloneNode(true);\n    const img = clone.querySelector('img');\n    const link = clone.querySelector('a');\n    const author = clone.querySelector('.author');\n\n    img.src = cropImage(picture.download_url, 2);\n    img.alt = picture.author;\n    author.textContent = picture.author;\n    img.width = picture.width / 10;\n    link.href = picture.download_url;\n\n    popupContainer.innerHTML = '';\n    popupContainer.appendChild(clone)\n    hideLoader();\n    togglePopup();\n}\n\n/**\n * Функция переклбчает класс открытия на попапе\n */\nconst togglePopup = function () {\n    popup.classList.toggle('open');\n}\n\n/**\n * @type {object} MouseEvent\n */\n\n/**\n * Обработчик кнопки подгрузки картинок\n * @param {MouseEvent} evt\n */\nconst actionHandler = function (evt) {\n    evt.preventDefault();\n    const nextPage = evt.currentTarget.dataset.page;\n    evt.currentTarget.dataset.page = nextPage + 1;\n\n    if (nextPage > MAX_PAGE_IAMGES) {\n        console.warn(`WARN: You are trying to call a page that exceeds ${MAX_PAGE_IAMGES}`);\n        evt.currentTarget.disabled = true;\n    } else {\n        getPictures(nextPage);\n    }\n}\n\n/**\n * Обработчик события click по картинкам.\n * Запрашивает данные по картинке, на которую кликнули,\n * для открытия попапа с ней\n * @param {MouseEvent} evt\n */\nconst imageHandler = function (evt) {\n    evt.preventDefault();\n\n    if (evt.target.closest('a')) {\n        getPictureInfo(evt.target.dataset.id);\n    }\n}\n\naction.addEventListener('click', actionHandler);\ncontainer.addEventListener('click', imageHandler);\npopupClose.addEventListener('click', togglePopup);\n\ninitialState();\n"]}